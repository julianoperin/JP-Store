{"ast":null,"code":"var _jsxFileName = \"/Users/julianoperin/Desktop/jpstore/frontend/src/screens/ProductScreen/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./ProductScreen.scss\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; //! Actions\n\nimport { getProductDetails } from \"../../redux/actions/productActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.getProductDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    if (product && match.params.id !== product._id) {\n      dispatch(getProductDetails(match.params.id));\n    }\n  }, [dispatch, match, product]);\n\n  const addToCartHandler = () => {\n    dispatch(addToCart(product._id, qty));\n    history.push(\"/cart\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productscreen\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productscreen__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left__image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.imageUrl,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"left__name\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), \" $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), \" \", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productscreen__right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Amount: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", product.price * qty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"Status:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: qty,\n              onChange: e => setQty(e.target.value),\n              children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: x + 1\n              }, x + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addToCartHandler,\n              children: \"Add To Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductScreen, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/julianoperin/Desktop/jpstore/frontend/src/screens/ProductScreen/ProductScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getProductDetails","addToCart","ProductScreen","match","history","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","_id","addToCartHandler","push","imageUrl","name","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./ProductScreen.scss\";\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//! Actions\nimport { getProductDetails } from \"../../redux/actions/productActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\n\nconst ProductScreen = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.getProductDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    if (product && match.params.id !== product._id) {\n      dispatch(getProductDetails(match.params.id));\n    }\n  }, [dispatch, match, product]);\n\n  const addToCartHandler = () => {\n    dispatch(addToCart(product._id, qty));\n    history.push(\"/cart\");\n  };\n\n  return (\n    <div className=\"productscreen\">\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>Error</h2>\n      ) : (\n        <>\n          <div className=\"productscreen__left\">\n            <div className=\"left__image\">\n              <img src={product.imageUrl} alt={product.name} />\n            </div>\n\n            <div className=\"left__info\">\n              <p className=\"left__name\">{product.name}</p>\n              <p>\n                {\" \"}\n                <b> Price:</b> ${product.price}\n              </p>\n              <p>\n                {\" \"}\n                <b> Description:</b> {product.description}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"productscreen__right\">\n            <div className=\"right__info\">\n              <p>\n                Total Amount: <span>${product.price * qty}</span>\n              </p>\n              <p>\n                {\" \"}\n                Status:{\" \"}\n                <span>\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                </span>\n              </p>\n\n              <p>\n                Quantity\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\n                  {[...Array(product.countInStock).keys()].map((x) => (\n                    <option key={x + 1}>{x + 1}</option>\n                  ))}\n                </select>\n              </p>\n              <p>\n                <button type=\"button\" onClick={addToCartHandler}>\n                  Add To Cart\n                </button>\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}